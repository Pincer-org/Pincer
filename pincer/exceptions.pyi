from typing import Any, Optional

class PincerError(Exception): ...
class InvalidPayload(PincerError): ...

class UnhandledException(PincerError):
    def __init__(self, specific: str) -> None: ...

class NoExportMethod(PincerError): ...
class CogError(PincerError): ...
class CogNotFound(CogError): ...
class CogAlreadyExists(CogError): ...
class NoValidSetupMethod(CogError): ...
class TooManySetupArguments(CogError): ...
class NoCogManagerReturnFound(CogError): ...
class CommandError(PincerError): ...

class CommandCooldownError(CommandError):
    ctx: Any
    def __init__(self, message: str, context) -> None: ...

class CommandIsNotCoroutine(CommandError): ...
class CommandAlreadyRegistered(CommandError): ...
class CommandDescriptionTooLong(CommandError): ...
class TooManyArguments(CommandError): ...
class InvalidArgumentAnnotation(CommandError): ...
class CommandReturnIsEmpty(CommandError): ...
class InvalidCommandGuild(CommandError): ...
class InteractionDoesNotExist(CommandError): ...
class UseFollowup(CommandError): ...
class InteractionAlreadyAcknowledged(CommandError): ...
class InteractionTimedOut(CommandError): ...
class InvalidCommandName(CommandError): ...
class InvalidEventName(PincerError): ...
class InvalidUrlError(PincerError, ValueError): ...
class ImageEncodingError(PincerError): ...

class EmbedFieldError(PincerError, ValueError):
    @classmethod
    def from_desc(cls, _type: str, max_size: int, cur_size: int): ...

class EmbedOverflow(PincerError): ...

class TaskError(PincerError):
    task: Any
    def __init__(self, message: str, task: Any | None = ...) -> None: ...

class TaskAlreadyRunning(TaskError): ...
class TaskCancelError(TaskError): ...
class TaskIsNotCoroutine(TaskError): ...
class TaskInvalidDelay(TaskError): ...
class DispatchError(PincerError): ...
class _InternalPerformReconnectError(DispatchError): ...
class DisallowedIntentsError(DispatchError): ...

class InvalidTokenError(DispatchError, ValueError):
    def __init__(self, hint: Optional[str] = ...) -> None: ...

class HeartbeatError(DispatchError): ...
class UnavailableGuildError(PincerError): ...
class TimeoutError(PincerError): ...
class HTTPError(PincerError): ...
class NotModifiedError(HTTPError): ...
class BadRequestError(HTTPError): ...
class UnauthorizedError(HTTPError): ...
class ForbiddenError(HTTPError): ...
class NotFoundError(HTTPError): ...
class MethodNotAllowedError(HTTPError): ...
class RateLimitError(HTTPError): ...
class GatewayError(HTTPError): ...
class ServerError(HTTPError): ...
